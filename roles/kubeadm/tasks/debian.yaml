---
- name: update all package
  apt:
    name: "*"
    state: latest
    update_cache: yes

- name: Adding k8s.conf in /etc/modules-load.d
  copy:
    src: "{{ role_path }}/files/k8s.conf-modules-load"
    dest: /etc/modules-load.d/k8s.conf

- name: Adding k8s.conf in /etc/sysctl.d/
  copy:
    src: "{{ role_path }}/files/k8s.conf-sysctl"
    dest: /etc/sysctl.d/k8s.conf
  register: k8s_conf

- name: reload sysctl
  command: sysctl --system
  when: k8s_conf.changed

- name: check if SWAP is on
  command: swapon -s
  register: swap
  changed_when: false

- name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
  command: swapoff -a
  when: swap.stdout != ""

- name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: verify if containerd is installed
  service:
    name: containerd
    state: started
  ignore_errors: true
  register: containerd_installed

- name: Download and unarchive containerd  
  ansible.builtin.unarchive:
    src: "https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}-{{ os }}-{{ architecture }}.tar.gz"
    dest: /usr/local
    remote_src: yes
  when: containerd_installed.failed == true

- name: create /usr/local/lib/systemd/system 
  file:
    path: /usr/local/lib/systemd/system
    state: directory

- name: create containerd.service
  get_url:
    url: "{{ containerd_service }}"
    dest: /usr/local/lib/systemd/system/

- name: Force systemd to reread configs and enable containerd
  ansible.builtin.systemd:
    daemon_reload: true
    name: containerd
    state: started