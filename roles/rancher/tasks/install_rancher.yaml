---
- name: Add stable chart repo
  kubernetes.core.helm_repository:
    name: "{{ item.key }}"
    repo_url: "{{ item.value.url }}"
  loop: "{{ query('dict', repo_helm) }}"

- name: Create rancher-value.yaml
  template:
    src: "{{ role_path }}/rancher-values.yaml"
    dest: "{{ role_path }}/rancher-value.yaml"

- name: Create cattle-system namespace
  kubernetes.core.k8s:
    name: cattle-system
    api_version: v1
    kind: Namespace
    state: present
    kubeconfig: "{{ kubeconfig }}"

- name: Create SSL secret for Rancher
  kubernetes.core.k8s:
    state: present
    namespace: cattle-system
    src: "{{ path_to_ca }}"
    kubeconfig: "{{ kubeconfig }}"
  when: privateCA == true

- name: Create secret for additional CA
  kubernetes.core.k8s:
    state: present
    namespace: cattle-system
    src: "{{ path_to_add_ca }}"
    kubeconfig: "{{ kubeconfig }}"
  when: additionalTrustedCAs == true

#kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.7.1/cert-manager.crds.yaml
- name: Apply cert-manager.crds manifest to the cluster
  kubernetes.core.k8s:
    state: present
    src: "{{ role_path }}/files/cert-manager.crds.yaml"
    kubeconfig: "{{ kubeconfig }}"

- name: Deploy cert-manager chart inside cert-manager namespace
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: jetstack/cert-manager
    release_namespace: cert-manager
    create_namespace: true
    chart_version: "{{ cert_manager_version }}"
    kubeconfig: "{{ kubeconfig }}"

- name: Deploy Rancher chart inside cattle-system namespace
  kubernetes.core.helm:
    kubeconfig: "{{ kubeconfig }}"
    name: rancher
    create_namespace: true
    chart_ref: rancher-stable/rancher
    chart_version: "{{ rancher_version }}"
    release_namespace: cattle-system
    values_files:
      - "{{ role_path }}/files/rancher-values.yaml"